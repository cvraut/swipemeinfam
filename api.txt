GET /swipemein/api/v1/users[?query=value[&query2=value2...]]
Gets the user list in JSON with the list of user JSON found under the key "users"
Supports queries and will return a list of users whose queries are that value:
	name=<string>
	swipes=<int>
	cost=<float>
	times=<string>
	pippin=<bool>
	anteatery=<bool>

Also supports value checking with:
	ne: not equal to = <value>
	lt: less than = <value>
	lte: less than equals = <value>
	gt: greater than = <value>
	gte: greater than equals = <value>
For example, adding the query swipes__lt=19 will result in a list of users who have less than 19 swipes

GET /swipemein/api/v1/users/<ucinetid>
Gets the user JSON for a ucinetid
User JSON Format:
	{
	   'ucinetid':user.ucinetid,
	   'name':user.name,
	   'swipes':user.swipes,
	   'cost':user.cost,
	   'times':user.times,
	   'places':{
		  'pippin':user.pippin,
		  'anteatery':user.anteatery
	   }
	}

POST /swipemein/api/v1/users/<ucinetid>?name=<string>&swipes=<int>
Adds the ucinetid user to the database, the queries name and swipes are required
Will return a json in the form 
	{"success": <bool>} 
based on whether or not the operation succeeded

PUT /swipemein/api/v1/users/<ucinetid>?query=value[&query2=value2...]
Updates the ucinetid user's values with the given query(s)
Will return a json in the form 
	{"success": <bool>} 
based on whether or not the operation succeeded

Possible queries:
	name=<string>
	swipes=<int>
	cost=<float>
	times=<string>
	pippin=<bool>
	anteatery=<bool>

DELETE /swipemein/api/v1/users/<ucinetid>
Deletes the given ucinetid from the database
Will return a json in the form 
	{"success": <bool>} 
based on whether or not the operation succeeded
